# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: snapshot/snapshot.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "snapshot.NullString" do
    optional :valid, :bool, 1
    optional :value, :string, 2
  end
  add_message "snapshot.NullInt64" do
    optional :valid, :bool, 1
    optional :value, :int64, 2
  end
  add_message "snapshot.NullDouble" do
    optional :valid, :bool, 1
    optional :value, :double, 2
  end
  add_message "snapshot.NullTimestamp" do
    optional :valid, :bool, 1
    optional :value, :int64, 2
  end
  add_message "snapshot.Snapshot" do
    repeated :backends, :message, 1, "snapshot.Activity"
    optional :postgres, :message, 3, "snapshot.SnapshotPostgres"
    optional :system, :message, 4, "snapshot.System"
    repeated :logs, :message, 5, "snapshot.LogLine"
    repeated :explains, :message, 6, "snapshot.Explain"
    optional :opts, :message, 7, "snapshot.SnapshotOpts"
  end
  add_message "snapshot.SnapshotOpts" do
    optional :statement_stats_are_diffed, :bool, 1
    optional :postgres_relation_stats_are_diffed, :bool, 2
  end
  add_message "snapshot.SnapshotPostgres" do
    repeated :relations, :message, 1, "snapshot.Relation"
    repeated :settings, :message, 2, "snapshot.Setting"
    repeated :functions, :message, 3, "snapshot.Function"
    optional :version, :message, 4, "snapshot.PostgresVersion"
  end
  add_message "snapshot.System" do
    optional :system_type, :enum, 1, "snapshot.SystemType"
    optional :cpu, :message, 3, "snapshot.CPU"
    optional :memory, :message, 4, "snapshot.Memory"
    repeated :storage, :message, 5, "snapshot.Storage"
    optional :network, :message, 6, "snapshot.Network"
    optional :scheduler, :message, 7, "snapshot.Scheduler"
    oneof :system_info do
      optional :amazon_rds_info, :message, 2, "snapshot.AmazonRdsInfo"
    end
  end
  add_message "snapshot.Storage" do
    optional :bytes_available, :int64, 1
    optional :bytes_total, :int64, 2
    optional :mountpoint, :string, 3
    optional :name, :string, 4
    optional :path, :string, 5
    optional :perfdata, :message, 6, "snapshot.StoragePerfdata"
  end
  add_message "snapshot.Scheduler" do
    optional :context_switches, :int64, 1
    optional :interrupts, :int64, 2
    optional :loadavg_1min, :double, 3
    optional :loadavg_5min, :double, 4
    optional :loadavg_15min, :double, 5
    optional :procs_blocked, :int64, 6
    optional :procs_created, :int64, 7
    optional :procs_running, :int64, 8
  end
  add_message "snapshot.LogLine" do
    optional :occurred_at, :int64, 1
    optional :source, :enum, 2, "snapshot.LogLine.SourceType"
    optional :client_ip, :message, 3, "snapshot.NullString"
    optional :log_level, :string, 4
    optional :backend_pid, :int32, 5
    optional :content, :string, 6
    repeated :additional_lines, :message, 7, "snapshot.LogLine"
  end
  add_enum "snapshot.LogLine.SourceType" do
    value :PostgresSource, 0
    value :AmazonRdsSource, 1
  end
  add_message "snapshot.Explain" do
    optional :occurred_at, :int64, 1
    optional :normalized_query, :string, 2
    optional :runtime, :double, 3
    optional :explain_output, :string, 4
    optional :explain_error, :message, 5, "snapshot.NullString"
  end
  add_message "snapshot.Setting" do
    optional :name, :string, 1
    optional :current_value, :string, 2
    optional :unit, :message, 3, "snapshot.NullString"
    optional :boot_value, :message, 4, "snapshot.NullString"
    optional :reset_value, :message, 5, "snapshot.NullString"
    optional :source, :message, 6, "snapshot.NullString"
    optional :source_file, :message, 7, "snapshot.NullString"
    optional :source_line, :message, 8, "snapshot.NullString"
  end
  add_message "snapshot.Function" do
    optional :schema_name, :string, 1
    optional :function_name, :string, 2
    optional :language, :string, 3
    optional :source, :string, 4
    optional :source_bin, :string, 5
    optional :config, :message, 6, "snapshot.NullString"
    optional :arguments, :string, 7
    optional :result, :string, 8
    optional :aggregate, :bool, 9
    optional :window, :bool, 10
    optional :security_definer, :bool, 11
    optional :leakproof, :bool, 12
    optional :strict, :bool, 13
    optional :returns_set, :bool, 14
    optional :volatile, :string, 15
    optional :calls, :message, 16, "snapshot.NullInt64"
    optional :total_time, :message, 17, "snapshot.NullDouble"
    optional :self_time, :message, 18, "snapshot.NullDouble"
  end
  add_message "snapshot.Relation" do
    optional :oid, :int64, 1
    optional :schema_name, :string, 2
    optional :table_name, :string, 3
    optional :relation_type, :string, 4
    optional :stats, :message, 5, "snapshot.Relation.Stats"
    repeated :columns, :message, 7, "snapshot.Relation.Column"
    repeated :indices, :message, 8, "snapshot.Relation.Index"
    repeated :constraints, :message, 9, "snapshot.Relation.Constraint"
    optional :view_definition, :string, 10
  end
  add_message "snapshot.Relation.Column" do
    optional :relation_oid, :int64, 1
    optional :name, :string, 2
    optional :data_type, :string, 3
    optional :default_value, :message, 4, "snapshot.NullString"
    optional :not_null, :bool, 5
    optional :position, :int64, 6
  end
  add_message "snapshot.Relation.Stats" do
    optional :size_bytes, :int64, 1
    optional :wasted_bytes, :int64, 2
    optional :seq_scan, :int64, 3
    optional :seq_tup_read, :int64, 4
    optional :idx_scan, :int64, 5
    optional :idx_tup_fetch, :int64, 6
    optional :n_tup_ins, :int64, 7
    optional :n_tup_upd, :int64, 8
    optional :n_tup_del, :int64, 9
    optional :n_tup_hot_upd, :int64, 10
    optional :n_live_tup, :int64, 11
    optional :n_dead_tup, :int64, 12
    optional :n_mod_since_analyze, :message, 13, "snapshot.NullInt64"
    optional :last_vacuum, :message, 14, "snapshot.NullTimestamp"
    optional :last_autovacuum, :message, 15, "snapshot.NullTimestamp"
    optional :last_analyze, :message, 16, "snapshot.NullTimestamp"
    optional :last_autoanalyze, :message, 17, "snapshot.NullTimestamp"
    optional :vacuum_count, :int64, 18
    optional :autovacuum_count, :int64, 19
    optional :analyze_count, :int64, 20
    optional :autoanalyze_count, :int64, 21
    optional :heap_blks_read, :message, 22, "snapshot.NullInt64"
    optional :heap_blks_hit, :message, 23, "snapshot.NullInt64"
    optional :idx_blks_read, :message, 24, "snapshot.NullInt64"
    optional :idx_blks_hit, :message, 25, "snapshot.NullInt64"
    optional :toast_blks_read, :message, 26, "snapshot.NullInt64"
    optional :toast_blks_hit, :message, 27, "snapshot.NullInt64"
    optional :tidx_blks_read, :message, 28, "snapshot.NullInt64"
    optional :tidx_blks_hit, :message, 29, "snapshot.NullInt64"
  end
  add_message "snapshot.Relation.Index" do
    optional :relation_oid, :int64, 1
    optional :index_oid, :int64, 2
    optional :columns, :string, 3
    optional :name, :string, 4
    optional :size_bytes, :int64, 5
    optional :wasted_bytes, :int64, 6
    optional :is_primary, :bool, 7
    optional :is_unique, :bool, 8
    optional :is_valid, :bool, 9
    optional :index_def, :string, 10
    optional :constraint_def, :message, 11, "snapshot.NullString"
    optional :idx_scan, :int64, 12
    optional :idx_tup_read, :int64, 13
    optional :idx_tup_fetch, :int64, 14
    optional :idx_blks_read, :int64, 15
    optional :idx_blks_hit, :int64, 16
  end
  add_message "snapshot.Relation.Constraint" do
    optional :relation_oid, :int64, 1
    optional :name, :string, 2
    optional :constraint_def, :string, 3
    optional :columns, :string, 4
    optional :foreign_schema, :string, 5
    optional :foreign_table, :string, 6
    optional :foreign_columns, :string, 7
  end
  add_message "snapshot.StoragePerfdata" do
    optional :version, :int64, 1
    optional :rd_ios, :int64, 2
    optional :wr_ios, :int64, 3
    optional :ios_in_prog, :int64, 4
    optional :avg_req_size, :int64, 5
    optional :rd_latency, :double, 6
    optional :rd_throughput, :int64, 7
    optional :wr_latency, :double, 8
    optional :wr_throughput, :int64, 9
    optional :rd_merges, :int64, 10
    optional :rd_sectors, :int64, 11
    optional :rd_ticks, :int64, 12
    optional :wr_merges, :int64, 13
    optional :wr_sectors, :int64, 14
    optional :wr_ticks, :int64, 15
    optional :tot_ticks, :int64, 16
    optional :rq_ticks, :int64, 17
  end
  add_message "snapshot.Network" do
    optional :receive_throughput, :int64, 1
    optional :transmit_throughput, :int64, 2
  end
  add_message "snapshot.CPU" do
    optional :utilization, :double, 1
    optional :busy_times_guest_msec, :int64, 2
    optional :busy_times_guest_nice_msec, :int64, 3
    optional :busy_times_idle_msec, :int64, 4
    optional :busy_times_iowait_msec, :int64, 5
    optional :busy_times_irq_msec, :int64, 6
    optional :busy_times_nice_msec, :int64, 7
    optional :busy_times_softirq_msec, :int64, 8
    optional :busy_times_steal_msec, :int64, 9
    optional :busy_times_system_msec, :int64, 10
    optional :busy_times_user_msec, :int64, 11
    optional :hardware_cache_size, :string, 12
    optional :hardware_model, :string, 13
    optional :hardware_sockets, :int64, 14
    optional :hardware_cores_per_socket, :int64, 15
    optional :hardware_speed_mhz, :float, 16
  end
  add_message "snapshot.Memory" do
    optional :applications_bytes, :int64, 1
    optional :buffers_bytes, :int64, 2
    optional :dirty_bytes, :int64, 3
    optional :free_bytes, :int64, 4
    optional :pagecache_bytes, :int64, 5
    optional :swap_free_bytes, :int64, 6
    optional :swap_total_bytes, :int64, 7
    optional :total_bytes, :int64, 8
    optional :writeback_bytes, :int64, 9
    optional :active_bytes, :int64, 10
  end
  add_message "snapshot.PostgresVersion" do
    optional :full, :string, 1
    optional :short, :string, 2
    optional :numeric, :int64, 3
  end
  add_message "snapshot.Activity" do
    optional :pid, :int64, 1
    optional :username, :string, 2
    optional :application_name, :string, 3
    optional :client_addr, :string, 4
    optional :backend_start, :int64, 5
    optional :xact_start, :int64, 6
    optional :query_start, :int64, 7
    optional :state_change, :int64, 8
    optional :waiting, :bool, 9
    optional :state, :string, 10
    optional :normalized_query, :string, 11
  end
  add_message "snapshot.AmazonRdsInfo" do
    optional :region, :string, 1
    optional :instance_class, :string, 2
    optional :instance_id, :string, 3
    optional :status, :string, 4
    optional :availability_zone, :string, 5
    optional :publicly_accessible, :bool, 6
    optional :multi_az, :bool, 7
    optional :secondary_availability_zone, :string, 8
    optional :ca_certificate, :string, 9
    optional :auto_minor_version_upgrade, :bool, 10
    optional :preferred_maintenance_window, :string, 11
    optional :latest_restorable_time, :int64, 12
    optional :preferred_backup_window, :string, 13
    optional :backup_retention_period, :int64, 14
    optional :master_username, :string, 15
    optional :initial_db_name, :string, 16
    optional :created_at, :int64, 17
    optional :storage_provisioned_iops, :int64, 18
    optional :storage_encrypted, :bool, 19
    optional :storage_type, :string, 20
    optional :parameter_apply_status, :string, 21
    optional :parameter_pgss_enabled, :bool, 22
    optional :os_snapshot, :message, 23, "snapshot.RdsOsSnapshot"
  end
  add_message "snapshot.RdsOsSnapshot" do
    optional :engine, :string, 1
    optional :instance_id, :string, 2
    optional :instance_resource_id, :string, 3
    optional :timestamp, :string, 4
    optional :version, :float, 5
    optional :uptime, :string, 6
    optional :num_cpus, :int32, 7
    optional :cpu_utilization, :message, 8, "snapshot.RdsOsCPUUtilization"
    optional :load_average_minute, :message, 9, "snapshot.RdsOsLoadAverageMinute"
    optional :memory, :message, 10, "snapshot.RdsOsMemory"
    optional :tasks, :message, 11, "snapshot.RdsOsTasks"
    optional :swap, :message, 12, "snapshot.RdsOsSwap"
    repeated :disk_io, :message, 14, "snapshot.RdsOsDiskIO"
  end
  add_message "snapshot.RdsOsCPUUtilization" do
    optional :guest, :float, 1
    optional :irq, :float, 2
    optional :system, :float, 3
    optional :wait, :float, 4
    optional :idle, :float, 5
    optional :user, :float, 6
    optional :total, :float, 7
    optional :steal, :float, 8
    optional :nice, :float, 9
  end
  add_message "snapshot.RdsOsLoadAverageMinute" do
    optional :fifteen, :float, 1
    optional :five, :float, 2
    optional :one, :float, 3
  end
  add_message "snapshot.RdsOsMemory" do
    optional :writeback, :int64, 1
    optional :huge_pages_free, :int64, 2
    optional :huge_pages_rsvd, :int64, 3
    optional :huge_pages_surp, :int64, 4
    optional :cached, :int64, 5
    optional :huge_pages_size, :int64, 6
    optional :free, :int64, 7
    optional :huge_pages_total, :int64, 8
    optional :inactive, :int64, 9
    optional :page_tables, :int64, 10
    optional :dirty, :int64, 11
    optional :mapped, :int64, 12
    optional :active, :int64, 13
    optional :total, :int64, 14
    optional :slab, :int64, 15
    optional :buffers, :int64, 16
  end
  add_message "snapshot.RdsOsTasks" do
    optional :sleeping, :int64, 1
    optional :zombie, :int64, 2
    optional :running, :int64, 3
    optional :stopped, :int64, 4
    optional :total, :int64, 5
    optional :blocked, :int64, 6
  end
  add_message "snapshot.RdsOsSwap" do
    optional :cached, :int64, 1
    optional :total, :int64, 2
    optional :free, :int64, 3
  end
  add_message "snapshot.RdsOsDiskIO" do
    optional :writeKbPS, :float, 1
    optional :readIOsPS, :float, 2
    optional :await, :float, 3
    optional :readKbPS, :float, 4
    optional :rrqmPS, :float, 5
    optional :util, :float, 6
    optional :avgQueueLen, :float, 7
    optional :tps, :float, 8
    optional :readKb, :float, 9
    optional :device, :string, 10
    optional :writeKb, :float, 11
    optional :avgReqSz, :float, 12
    optional :wrqmPS, :float, 13
    optional :writeIOsPS, :float, 14
  end
  add_enum "snapshot.SystemType" do
    value :PHYSICAL_SYSTEM, 0
    value :VIRTUAL_SYSTEM, 1
    value :AMAZON_RDS_SYSTEM, 2
    value :HEROKU_SYSTEM, 3
  end
end

module Snapshot
  NullString = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.NullString").msgclass
  NullInt64 = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.NullInt64").msgclass
  NullDouble = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.NullDouble").msgclass
  NullTimestamp = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.NullTimestamp").msgclass
  Snapshot = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Snapshot").msgclass
  SnapshotOpts = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.SnapshotOpts").msgclass
  SnapshotPostgres = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.SnapshotPostgres").msgclass
  System = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.System").msgclass
  Storage = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Storage").msgclass
  Scheduler = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Scheduler").msgclass
  LogLine = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.LogLine").msgclass
  LogLine::SourceType = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.LogLine.SourceType").enummodule
  Explain = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Explain").msgclass
  Setting = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Setting").msgclass
  Function = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Function").msgclass
  Relation = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Relation").msgclass
  Relation::Column = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Relation.Column").msgclass
  Relation::Stats = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Relation.Stats").msgclass
  Relation::Index = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Relation.Index").msgclass
  Relation::Constraint = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Relation.Constraint").msgclass
  StoragePerfdata = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.StoragePerfdata").msgclass
  Network = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Network").msgclass
  CPU = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.CPU").msgclass
  Memory = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Memory").msgclass
  PostgresVersion = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.PostgresVersion").msgclass
  Activity = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.Activity").msgclass
  AmazonRdsInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.AmazonRdsInfo").msgclass
  RdsOsSnapshot = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsSnapshot").msgclass
  RdsOsCPUUtilization = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsCPUUtilization").msgclass
  RdsOsLoadAverageMinute = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsLoadAverageMinute").msgclass
  RdsOsMemory = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsMemory").msgclass
  RdsOsTasks = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsTasks").msgclass
  RdsOsSwap = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsSwap").msgclass
  RdsOsDiskIO = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.RdsOsDiskIO").msgclass
  SystemType = Google::Protobuf::DescriptorPool.generated_pool.lookup("snapshot.SystemType").enummodule
end
