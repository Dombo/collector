// Code generated by protoc-gen-go.
// source: bloat_report.proto
// DO NOT EDIT!

/*
Package pganalyze_collector is a generated protocol buffer package.

It is generated from these files:
	bloat_report.proto
	buffercache_report.proto
	full_snapshot.proto
	shared.proto

It has these top-level messages:
	BloatReport
	RelationBloatStatistic
	IndexBloatStatistic
	BuffercacheReport
	BuffercacheEntry
	FullSnapshot
	CollectorStatistic
	RoleInformation
	DatabaseInformation
	PostgresVersion
	LogLine
	Setting
	Backend
	TablespaceReference
	TablespaceInformation
	System
	SystemInformation
	SystemInformationSelfHosted
	SystemInformationAmazonRDS
	SchedulerStatistic
	MemoryStatistic
	CPUInformation
	CPUReference
	CPUStatistic
	NetworkReference
	NetworkStatistic
	DiskReference
	DiskInformation
	DiskStatistic
	DiskPartitionReference
	DiskPartitionInformation
	DiskPartitionStatistic
	QueryStatistic
	QueryExplain
	RelationInformation
	RelationStatistic
	RelationEvent
	IndexInformation
	IndexStatistic
	FunctionInformation
	FunctionStatistic
	NullString
	NullTimestamp
	RoleReference
	DatabaseReference
	RelationReference
	IndexReference
	FunctionReference
	QueryReference
	QueryInformation
*/
package pganalyze_collector

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type BloatLookupMethod int32

const (
	BloatLookupMethod_ESTIMATE_FAST BloatLookupMethod = 0
	BloatLookupMethod_ESTIMATE_SLOW BloatLookupMethod = 1
	BloatLookupMethod_FULL_SCAN     BloatLookupMethod = 2
)

var BloatLookupMethod_name = map[int32]string{
	0: "ESTIMATE_FAST",
	1: "ESTIMATE_SLOW",
	2: "FULL_SCAN",
}
var BloatLookupMethod_value = map[string]int32{
	"ESTIMATE_FAST": 0,
	"ESTIMATE_SLOW": 1,
	"FULL_SCAN":     2,
}

func (x BloatLookupMethod) String() string {
	return proto.EnumName(BloatLookupMethod_name, int32(x))
}
func (BloatLookupMethod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BloatReport struct {
	ReportRunUuid           string                    `protobuf:"bytes,1,opt,name=report_run_uuid,json=reportRunUuid" json:"report_run_uuid,omitempty"`
	DatabaseReferences      []*DatabaseReference      `protobuf:"bytes,10,rep,name=database_references,json=databaseReferences" json:"database_references,omitempty"`
	RelationReferences      []*RelationReference      `protobuf:"bytes,11,rep,name=relation_references,json=relationReferences" json:"relation_references,omitempty"`
	IndexReferences         []*IndexReference         `protobuf:"bytes,12,rep,name=index_references,json=indexReferences" json:"index_references,omitempty"`
	RelationBloatStatistics []*RelationBloatStatistic `protobuf:"bytes,20,rep,name=relation_bloat_statistics,json=relationBloatStatistics" json:"relation_bloat_statistics,omitempty"`
	IndexBloatStatistics    []*IndexBloatStatistic    `protobuf:"bytes,21,rep,name=index_bloat_statistics,json=indexBloatStatistics" json:"index_bloat_statistics,omitempty"`
}

func (m *BloatReport) Reset()                    { *m = BloatReport{} }
func (m *BloatReport) String() string            { return proto.CompactTextString(m) }
func (*BloatReport) ProtoMessage()               {}
func (*BloatReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BloatReport) GetDatabaseReferences() []*DatabaseReference {
	if m != nil {
		return m.DatabaseReferences
	}
	return nil
}

func (m *BloatReport) GetRelationReferences() []*RelationReference {
	if m != nil {
		return m.RelationReferences
	}
	return nil
}

func (m *BloatReport) GetIndexReferences() []*IndexReference {
	if m != nil {
		return m.IndexReferences
	}
	return nil
}

func (m *BloatReport) GetRelationBloatStatistics() []*RelationBloatStatistic {
	if m != nil {
		return m.RelationBloatStatistics
	}
	return nil
}

func (m *BloatReport) GetIndexBloatStatistics() []*IndexBloatStatistic {
	if m != nil {
		return m.IndexBloatStatistics
	}
	return nil
}

type RelationBloatStatistic struct {
	RelationIdx       int32             `protobuf:"varint,1,opt,name=relation_idx,json=relationIdx" json:"relation_idx,omitempty"`
	BloatLookupMethod BloatLookupMethod `protobuf:"varint,2,opt,name=bloat_lookup_method,json=bloatLookupMethod,enum=pganalyze.collector.BloatLookupMethod" json:"bloat_lookup_method,omitempty"`
	TotalBytes        int64             `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes" json:"total_bytes,omitempty"`
	BloatBytes        int64             `protobuf:"varint,4,opt,name=bloat_bytes,json=bloatBytes" json:"bloat_bytes,omitempty"`
	LiveTupleBytes    int64             `protobuf:"varint,5,opt,name=live_tuple_bytes,json=liveTupleBytes" json:"live_tuple_bytes,omitempty"`
	LiveTupleCount    int64             `protobuf:"varint,6,opt,name=live_tuple_count,json=liveTupleCount" json:"live_tuple_count,omitempty"`
	DeadTupleBytes    int64             `protobuf:"varint,7,opt,name=dead_tuple_bytes,json=deadTupleBytes" json:"dead_tuple_bytes,omitempty"`
	DeadTupleCount    int64             `protobuf:"varint,8,opt,name=dead_tuple_count,json=deadTupleCount" json:"dead_tuple_count,omitempty"`
}

func (m *RelationBloatStatistic) Reset()                    { *m = RelationBloatStatistic{} }
func (m *RelationBloatStatistic) String() string            { return proto.CompactTextString(m) }
func (*RelationBloatStatistic) ProtoMessage()               {}
func (*RelationBloatStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type IndexBloatStatistic struct {
	IndexIdx          int32             `protobuf:"varint,1,opt,name=index_idx,json=indexIdx" json:"index_idx,omitempty"`
	BloatLookupMethod BloatLookupMethod `protobuf:"varint,2,opt,name=bloat_lookup_method,json=bloatLookupMethod,enum=pganalyze.collector.BloatLookupMethod" json:"bloat_lookup_method,omitempty"`
	TotalBytes        int64             `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes" json:"total_bytes,omitempty"`
	BloatBytes        int64             `protobuf:"varint,4,opt,name=bloat_bytes,json=bloatBytes" json:"bloat_bytes,omitempty"`
	InternalPages     int64             `protobuf:"varint,5,opt,name=internal_pages,json=internalPages" json:"internal_pages,omitempty"`
	LeafPages         int64             `protobuf:"varint,6,opt,name=leaf_pages,json=leafPages" json:"leaf_pages,omitempty"`
	EmptyPages        int64             `protobuf:"varint,7,opt,name=empty_pages,json=emptyPages" json:"empty_pages,omitempty"`
	DeletedPages      int64             `protobuf:"varint,8,opt,name=deleted_pages,json=deletedPages" json:"deleted_pages,omitempty"`
	AvgLeafDensity    float64           `protobuf:"fixed64,9,opt,name=avg_leaf_density,json=avgLeafDensity" json:"avg_leaf_density,omitempty"`
}

func (m *IndexBloatStatistic) Reset()                    { *m = IndexBloatStatistic{} }
func (m *IndexBloatStatistic) String() string            { return proto.CompactTextString(m) }
func (*IndexBloatStatistic) ProtoMessage()               {}
func (*IndexBloatStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*BloatReport)(nil), "pganalyze.collector.BloatReport")
	proto.RegisterType((*RelationBloatStatistic)(nil), "pganalyze.collector.RelationBloatStatistic")
	proto.RegisterType((*IndexBloatStatistic)(nil), "pganalyze.collector.IndexBloatStatistic")
	proto.RegisterEnum("pganalyze.collector.BloatLookupMethod", BloatLookupMethod_name, BloatLookupMethod_value)
}

var fileDescriptor0 = []byte{
	// 568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x94, 0x5d, 0x6f, 0x12, 0x4d,
	0x18, 0x86, 0x5f, 0x4a, 0xdb, 0xb7, 0x3c, 0x7c, 0x14, 0x86, 0x5a, 0x57, 0x8d, 0xb1, 0xd2, 0xd8,
	0x10, 0x4d, 0x38, 0xd0, 0x5f, 0x40, 0xbf, 0x22, 0x09, 0xad, 0x66, 0xa1, 0xf6, 0xcc, 0xcd, 0xc0,
	0x4c, 0xe9, 0xc6, 0xe9, 0xce, 0x66, 0x66, 0xb6, 0x01, 0x8f, 0x8c, 0xff, 0xdb, 0xc4, 0xf9, 0x58,
	0x28, 0x2c, 0xdb, 0x1e, 0x7b, 0xb8, 0xd7, 0x5e, 0x73, 0xdf, 0x0f, 0xcf, 0x90, 0x05, 0x34, 0x62,
	0x1c, 0xab, 0x40, 0xd0, 0x98, 0x0b, 0xd5, 0x89, 0x05, 0x57, 0x1c, 0x35, 0xe3, 0x09, 0x8e, 0x30,
	0x9b, 0xfd, 0xa4, 0x9d, 0x31, 0x67, 0x8c, 0x8e, 0x15, 0x17, 0x2f, 0x2b, 0xf2, 0x16, 0x0b, 0x4a,
	0x9c, 0xd2, 0xfa, 0xb5, 0x09, 0xe5, 0x63, 0x73, 0xd2, 0xb7, 0x07, 0xd1, 0x11, 0xec, 0xba, 0x88,
	0x40, 0x24, 0x51, 0x90, 0x24, 0x21, 0xf1, 0x0a, 0x07, 0x85, 0x76, 0xc9, 0xaf, 0x3a, 0xec, 0x27,
	0xd1, 0x95, 0x86, 0xe8, 0x1a, 0x9a, 0x04, 0x2b, 0x3c, 0xc2, 0x92, 0xea, 0xce, 0x1b, 0x2a, 0x68,
	0x34, 0xa6, 0xd2, 0x83, 0x83, 0x62, 0xbb, 0xfc, 0xf1, 0xa8, 0x93, 0x53, 0xdc, 0x39, 0x4d, 0x7d,
	0x7f, 0xae, 0xfb, 0x88, 0x64, 0x91, 0x34, 0xc1, 0x82, 0x32, 0xac, 0x42, 0x1e, 0x2d, 0x07, 0x97,
	0x9f, 0x08, 0xf6, 0x53, 0x7f, 0x29, 0x58, 0x64, 0x91, 0x44, 0x97, 0x50, 0x0f, 0x23, 0x42, 0xa7,
	0xcb, 0xa9, 0x15, 0x9b, 0x7a, 0x98, 0x9b, 0xda, 0x33, 0xf2, 0x43, 0xe4, 0x6e, 0xb8, 0xf2, 0x2c,
	0xd1, 0x04, 0x5e, 0x2c, 0x06, 0x75, 0xbb, 0x97, 0x4a, 0x3f, 0x49, 0x15, 0x8e, 0xa5, 0xb7, 0x67,
	0x83, 0x3f, 0x3c, 0x39, 0xae, 0x5d, 0xfb, 0x60, 0x7e, 0xc6, 0x7f, 0x2e, 0x72, 0xb9, 0x44, 0xdf,
	0x61, 0xdf, 0x0d, 0xbe, 0xd6, 0xf2, 0xcc, 0xb6, 0xb4, 0x1f, 0x1f, 0x3f, 0x53, 0xb1, 0x17, 0xae,
	0x43, 0xd9, 0xfa, 0xb3, 0x01, 0xfb, 0xf9, 0x33, 0xa1, 0xb7, 0x50, 0x59, 0xfc, 0xc6, 0x90, 0x4c,
	0xed, 0x5f, 0x61, 0xcb, 0x2f, 0xcf, 0x59, 0x8f, 0x4c, 0xd1, 0x37, 0x68, 0xba, 0xb9, 0x18, 0xe7,
	0x3f, 0x92, 0x38, 0xb8, 0xa3, 0xea, 0x96, 0x13, 0x6f, 0x43, 0x9b, 0xb5, 0x47, 0xee, 0xcb, 0x96,
	0xf4, 0xad, 0x7e, 0x61, 0x6d, 0xbf, 0x31, 0xca, 0x22, 0xf4, 0x06, 0xca, 0x8a, 0x2b, 0xcc, 0x82,
	0xd1, 0x4c, 0xe9, 0x9b, 0x2a, 0xea, 0xbc, 0xa2, 0x0f, 0x16, 0x1d, 0x1b, 0x62, 0x04, 0x57, 0xec,
	0x84, 0x4d, 0x27, 0x58, 0xe4, 0x84, 0x36, 0xd4, 0x59, 0x78, 0x4f, 0x03, 0x95, 0xc4, 0x8c, 0xa6,
	0xd6, 0x96, 0xb5, 0x6a, 0x86, 0x0f, 0x0d, 0xce, 0x33, 0xc7, 0x3c, 0x89, 0x94, 0xb7, 0x9d, 0x31,
	0x4f, 0x0c, 0x35, 0x26, 0xa1, 0x98, 0xac, 0x64, 0xfe, 0xef, 0x4c, 0xc3, 0x57, 0x33, 0x97, 0x4c,
	0x97, 0xb9, 0x93, 0x31, 0x6d, 0x66, 0xeb, 0x77, 0x11, 0x9a, 0x39, 0xb7, 0x85, 0x5e, 0x41, 0xc9,
	0xdd, 0xfb, 0xc3, 0xe6, 0x77, 0x2c, 0xf8, 0xb7, 0xd7, 0xfe, 0x0e, 0x6a, 0x61, 0xa4, 0xa8, 0xd0,
	0xfd, 0x41, 0x8c, 0x27, 0x8b, 0xa5, 0x57, 0xe7, 0xf4, 0xab, 0x81, 0xe8, 0x35, 0x00, 0xa3, 0xf8,
	0x26, 0x55, 0xdc, 0xb6, 0x4b, 0x86, 0xb8, 0xd7, 0xba, 0x86, 0xde, 0xc5, 0x6a, 0x96, 0xbe, 0x77,
	0x3b, 0x06, 0x8b, 0x9c, 0x70, 0x08, 0x55, 0x42, 0x19, 0x55, 0x94, 0xa4, 0x8a, 0x5b, 0x6e, 0x25,
	0x85, 0x4e, 0xd2, 0x97, 0x80, 0xef, 0x27, 0x81, 0x2d, 0x22, 0x34, 0x92, 0xa1, 0x9a, 0x79, 0x25,
	0xed, 0x15, 0xfc, 0x9a, 0xe6, 0x7d, 0x8d, 0x4f, 0x1d, 0x7d, 0xff, 0x19, 0x1a, 0x6b, 0xfb, 0x41,
	0x0d, 0xa8, 0x9e, 0x0d, 0x86, 0xbd, 0x8b, 0xee, 0xf0, 0x2c, 0x38, 0xef, 0x0e, 0x86, 0xf5, 0xff,
	0x56, 0xd0, 0xa0, 0xff, 0xe5, 0xba, 0x5e, 0x40, 0x55, 0x28, 0x9d, 0x5f, 0xf5, 0xfb, 0xc1, 0xe0,
	0xa4, 0x7b, 0x59, 0xdf, 0x18, 0x6d, 0xdb, 0x0f, 0xeb, 0xa7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xaf, 0xaf, 0x56, 0x06, 0x91, 0x05, 0x00, 0x00,
}
