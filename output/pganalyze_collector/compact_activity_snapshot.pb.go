// Code generated by protoc-gen-go.
// source: compact_activity_snapshot.proto
// DO NOT EDIT!

package pganalyze_collector

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CompactActivitySnapshot struct {
	PostgresVersion *PostgresVersion `protobuf:"bytes,1,opt,name=postgres_version,json=postgresVersion" json:"postgres_version,omitempty"`
	Backends        []*Backend       `protobuf:"bytes,2,rep,name=backends" json:"backends,omitempty"`
}

func (m *CompactActivitySnapshot) Reset()                    { *m = CompactActivitySnapshot{} }
func (m *CompactActivitySnapshot) String() string            { return proto.CompactTextString(m) }
func (*CompactActivitySnapshot) ProtoMessage()               {}
func (*CompactActivitySnapshot) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CompactActivitySnapshot) GetPostgresVersion() *PostgresVersion {
	if m != nil {
		return m.PostgresVersion
	}
	return nil
}

func (m *CompactActivitySnapshot) GetBackends() []*Backend {
	if m != nil {
		return m.Backends
	}
	return nil
}

type Backend struct {
	Identity        uint64                     `protobuf:"varint,1,opt,name=identity" json:"identity,omitempty"`
	Pid             int32                      `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	HasRoleIdx      bool                       `protobuf:"varint,3,opt,name=has_role_idx,json=hasRoleIdx" json:"has_role_idx,omitempty"`
	RoleIdx         int32                      `protobuf:"varint,4,opt,name=role_idx,json=roleIdx" json:"role_idx,omitempty"`
	HasDatabaseIdx  bool                       `protobuf:"varint,5,opt,name=has_database_idx,json=hasDatabaseIdx" json:"has_database_idx,omitempty"`
	DatabaseIdx     int32                      `protobuf:"varint,6,opt,name=database_idx,json=databaseIdx" json:"database_idx,omitempty"`
	HasQueryIdx     bool                       `protobuf:"varint,7,opt,name=has_query_idx,json=hasQueryIdx" json:"has_query_idx,omitempty"`
	QueryIdx        int32                      `protobuf:"varint,8,opt,name=query_idx,json=queryIdx" json:"query_idx,omitempty"`
	QueryText       string                     `protobuf:"bytes,9,opt,name=query_text,json=queryText" json:"query_text,omitempty"`
	ApplicationName string                     `protobuf:"bytes,10,opt,name=application_name,json=applicationName" json:"application_name,omitempty"`
	ClientAddr      string                     `protobuf:"bytes,11,opt,name=client_addr,json=clientAddr" json:"client_addr,omitempty"`
	ClientPort      int32                      `protobuf:"varint,12,opt,name=client_port,json=clientPort" json:"client_port,omitempty"`
	BackendStart    *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=backend_start,json=backendStart" json:"backend_start,omitempty"`
	XactStart       *google_protobuf.Timestamp `protobuf:"bytes,14,opt,name=xact_start,json=xactStart" json:"xact_start,omitempty"`
	QueryStart      *google_protobuf.Timestamp `protobuf:"bytes,15,opt,name=query_start,json=queryStart" json:"query_start,omitempty"`
	StateChange     *google_protobuf.Timestamp `protobuf:"bytes,16,opt,name=state_change,json=stateChange" json:"state_change,omitempty"`
	Waiting         bool                       `protobuf:"varint,17,opt,name=waiting" json:"waiting,omitempty"`
	State           string                     `protobuf:"bytes,18,opt,name=state" json:"state,omitempty"`
	WaitEventType   string                     `protobuf:"bytes,19,opt,name=wait_event_type,json=waitEventType" json:"wait_event_type,omitempty"`
	WaitEvent       string                     `protobuf:"bytes,20,opt,name=wait_event,json=waitEvent" json:"wait_event,omitempty"`
	BackendType     string                     `protobuf:"bytes,21,opt,name=backend_type,json=backendType" json:"backend_type,omitempty"`
}

func (m *Backend) Reset()                    { *m = Backend{} }
func (m *Backend) String() string            { return proto.CompactTextString(m) }
func (*Backend) ProtoMessage()               {}
func (*Backend) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Backend) GetIdentity() uint64 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *Backend) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Backend) GetHasRoleIdx() bool {
	if m != nil {
		return m.HasRoleIdx
	}
	return false
}

func (m *Backend) GetRoleIdx() int32 {
	if m != nil {
		return m.RoleIdx
	}
	return 0
}

func (m *Backend) GetHasDatabaseIdx() bool {
	if m != nil {
		return m.HasDatabaseIdx
	}
	return false
}

func (m *Backend) GetDatabaseIdx() int32 {
	if m != nil {
		return m.DatabaseIdx
	}
	return 0
}

func (m *Backend) GetHasQueryIdx() bool {
	if m != nil {
		return m.HasQueryIdx
	}
	return false
}

func (m *Backend) GetQueryIdx() int32 {
	if m != nil {
		return m.QueryIdx
	}
	return 0
}

func (m *Backend) GetQueryText() string {
	if m != nil {
		return m.QueryText
	}
	return ""
}

func (m *Backend) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

func (m *Backend) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

func (m *Backend) GetClientPort() int32 {
	if m != nil {
		return m.ClientPort
	}
	return 0
}

func (m *Backend) GetBackendStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.BackendStart
	}
	return nil
}

func (m *Backend) GetXactStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.XactStart
	}
	return nil
}

func (m *Backend) GetQueryStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.QueryStart
	}
	return nil
}

func (m *Backend) GetStateChange() *google_protobuf.Timestamp {
	if m != nil {
		return m.StateChange
	}
	return nil
}

func (m *Backend) GetWaiting() bool {
	if m != nil {
		return m.Waiting
	}
	return false
}

func (m *Backend) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Backend) GetWaitEventType() string {
	if m != nil {
		return m.WaitEventType
	}
	return ""
}

func (m *Backend) GetWaitEvent() string {
	if m != nil {
		return m.WaitEvent
	}
	return ""
}

func (m *Backend) GetBackendType() string {
	if m != nil {
		return m.BackendType
	}
	return ""
}

func init() {
	proto.RegisterType((*CompactActivitySnapshot)(nil), "pganalyze.collector.CompactActivitySnapshot")
	proto.RegisterType((*Backend)(nil), "pganalyze.collector.Backend")
}

func init() { proto.RegisterFile("compact_activity_snapshot.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x95, 0xfe, 0x4b, 0x32, 0x4e, 0x9a, 0xb0, 0x2d, 0x62, 0x09, 0xa0, 0x86, 0x0a, 0xa1,
	0x70, 0x71, 0xa5, 0x72, 0x01, 0x21, 0x84, 0x4a, 0xe1, 0xc0, 0x05, 0x8a, 0x5b, 0x71, 0xb5, 0x26,
	0xf6, 0x12, 0xaf, 0x70, 0xbc, 0xdb, 0xdd, 0x69, 0x89, 0xf9, 0x34, 0x1c, 0xf8, 0xa0, 0x68, 0x77,
	0x9d, 0xb4, 0x95, 0x2a, 0xe5, 0xe6, 0x7d, 0xf3, 0x7b, 0x6f, 0xac, 0x99, 0x81, 0x83, 0x4c, 0xcd,
	0x35, 0x66, 0x94, 0x62, 0x46, 0xf2, 0x5a, 0x52, 0x9d, 0xda, 0x0a, 0xb5, 0x2d, 0x14, 0xc5, 0xda,
	0x28, 0x52, 0x6c, 0x4f, 0xcf, 0xb0, 0xc2, 0xb2, 0xfe, 0x23, 0xe2, 0x4c, 0x95, 0xa5, 0xc8, 0x48,
	0x99, 0xd1, 0xc1, 0x4c, 0xa9, 0x59, 0x29, 0x8e, 0x3c, 0x32, 0xbd, 0xfa, 0x79, 0x44, 0x72, 0x2e,
	0x2c, 0xe1, 0x5c, 0x07, 0xd7, 0xa8, 0x67, 0x0b, 0x34, 0x22, 0x0f, 0xaf, 0xc3, 0x7f, 0x2d, 0x78,
	0x74, 0x1a, 0xfa, 0x9c, 0x34, 0x6d, 0xce, 0x9b, 0x2e, 0xec, 0x1b, 0x0c, 0xb5, 0xb2, 0x34, 0x33,
	0xc2, 0xa6, 0xd7, 0xc2, 0x58, 0xa9, 0x2a, 0xde, 0x1a, 0xb7, 0x26, 0xd1, 0xf1, 0x8b, 0xf8, 0x9e,
	0xd6, 0xf1, 0x59, 0x03, 0xff, 0x08, 0x6c, 0x32, 0xd0, 0x77, 0x05, 0xf6, 0x06, 0x3a, 0x53, 0xcc,
	0x7e, 0x89, 0x2a, 0xb7, 0x7c, 0x63, 0xbc, 0x39, 0x89, 0x8e, 0x9f, 0xde, 0x1b, 0xf4, 0x31, 0x40,
	0xc9, 0x8a, 0x3e, 0xfc, 0xbb, 0x03, 0xed, 0x46, 0x65, 0x23, 0xe8, 0xc8, 0x5c, 0x54, 0x24, 0xa9,
	0xf6, 0xbf, 0xb3, 0x95, 0xac, 0xde, 0x6c, 0x08, 0x9b, 0x5a, 0xe6, 0x7c, 0x63, 0xdc, 0x9a, 0x6c,
	0x27, 0xee, 0x93, 0x8d, 0xa1, 0x57, 0xa0, 0x4d, 0x8d, 0x2a, 0x45, 0x2a, 0xf3, 0x05, 0xdf, 0x1c,
	0xb7, 0x26, 0x9d, 0x04, 0x0a, 0xb4, 0x89, 0x2a, 0xc5, 0x97, 0x7c, 0xc1, 0x1e, 0x43, 0x67, 0x55,
	0xdd, 0xf2, 0xc6, 0xb6, 0x69, 0x4a, 0x13, 0x18, 0x3a, 0x73, 0x8e, 0x84, 0x53, 0xb4, 0x01, 0xd9,
	0xf6, 0x01, 0xbb, 0x05, 0xda, 0x4f, 0x8d, 0xec, 0xc8, 0xe7, 0xd0, 0xbb, 0x43, 0xed, 0xf8, 0xa0,
	0x28, 0xbf, 0x85, 0x1c, 0x42, 0xdf, 0x85, 0x5d, 0x5e, 0x09, 0x53, 0x7b, 0xa6, 0xed, 0x93, 0xa2,
	0x02, 0xed, 0x77, 0xa7, 0x39, 0xe6, 0x09, 0x74, 0x6f, 0xea, 0x1d, 0x9f, 0xd1, 0xb9, 0x5c, 0x16,
	0x9f, 0x01, 0x84, 0x22, 0x89, 0x05, 0xf1, 0xee, 0xb8, 0x35, 0xe9, 0x26, 0x01, 0xbf, 0x10, 0x0b,
	0x62, 0xaf, 0x60, 0x88, 0x5a, 0x97, 0x32, 0x43, 0x92, 0xaa, 0x4a, 0x2b, 0x9c, 0x0b, 0x0e, 0x1e,
	0x1a, 0xdc, 0xd2, 0xbf, 0xe2, 0x5c, 0xb0, 0x03, 0x88, 0xb2, 0x52, 0x8a, 0x8a, 0x52, 0xcc, 0x73,
	0xc3, 0x23, 0x4f, 0x41, 0x90, 0x4e, 0xf2, 0xdc, 0xdc, 0x02, 0xb4, 0x32, 0xc4, 0x7b, 0xfe, 0x4f,
	0x1a, 0xe0, 0x4c, 0x19, 0x62, 0x1f, 0xa0, 0xdf, 0x2c, 0x27, 0xb5, 0x84, 0x86, 0x78, 0xdf, 0x1f,
	0xc6, 0x28, 0x0e, 0xe7, 0x17, 0x2f, 0xcf, 0x2f, 0xbe, 0x58, 0x9e, 0x5f, 0xd2, 0x6b, 0x0c, 0xe7,
	0x8e, 0x67, 0x6f, 0x01, 0x16, 0xee, 0xb8, 0x83, 0x7b, 0x77, 0xad, 0xbb, 0xeb, 0xe8, 0x60, 0x7d,
	0x07, 0x51, 0x98, 0x43, 0xf0, 0x0e, 0xd6, 0x7a, 0xc3, 0xd8, 0x82, 0xf9, 0x3d, 0xf4, 0x2c, 0x21,
	0x89, 0x34, 0x2b, 0xb0, 0x9a, 0x09, 0x3e, 0x5c, 0xeb, 0x8e, 0x3c, 0x7f, 0xea, 0x71, 0xc6, 0xa1,
	0xfd, 0x1b, 0x25, 0xc9, 0x6a, 0xc6, 0x1f, 0xf8, 0xf5, 0x2d, 0x9f, 0x6c, 0x1f, 0xb6, 0x3d, 0xc8,
	0x99, 0x9f, 0x66, 0x78, 0xb0, 0x97, 0x30, 0x70, 0x40, 0x2a, 0xae, 0xdd, 0x30, 0xa9, 0xd6, 0x82,
	0xef, 0xf9, 0x7a, 0xdf, 0xc9, 0x9f, 0x9d, 0x7a, 0x51, 0x6b, 0xe1, 0x76, 0x7b, 0xc3, 0xf1, 0xfd,
	0xb0, 0xdb, 0x15, 0xe2, 0xce, 0x6b, 0x39, 0x6e, 0x9f, 0xf1, 0xd0, 0x03, 0x51, 0xa3, 0xb9, 0x84,
	0xe9, 0x8e, 0xff, 0xf5, 0xd7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xff, 0x43, 0xf4, 0x4c, 0x37,
	0x04, 0x00, 0x00,
}
