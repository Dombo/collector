// Code generated by protoc-gen-go.
// source: reports/buffercache.proto
// DO NOT EDIT!

package pganalyze_collector

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BuffercacheReport struct {
	ReportRunUuid      string               `protobuf:"bytes,1,opt,name=report_run_uuid,json=reportRunUuid" json:"report_run_uuid,omitempty"`
	DatabaseReferences []*DatabaseReference `protobuf:"bytes,10,rep,name=database_references,json=databaseReferences" json:"database_references,omitempty"`
	BuffercacheEntries []*BuffercacheEntry  `protobuf:"bytes,11,rep,name=buffercache_entries,json=buffercacheEntries" json:"buffercache_entries,omitempty"`
	TotalBytes         int64                `protobuf:"varint,20,opt,name=total_bytes,json=totalBytes" json:"total_bytes,omitempty"`
	FreeBytes          int64                `protobuf:"varint,21,opt,name=free_bytes,json=freeBytes" json:"free_bytes,omitempty"`
}

func (m *BuffercacheReport) Reset()                    { *m = BuffercacheReport{} }
func (m *BuffercacheReport) String() string            { return proto.CompactTextString(m) }
func (*BuffercacheReport) ProtoMessage()               {}
func (*BuffercacheReport) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *BuffercacheReport) GetDatabaseReferences() []*DatabaseReference {
	if m != nil {
		return m.DatabaseReferences
	}
	return nil
}

func (m *BuffercacheReport) GetBuffercacheEntries() []*BuffercacheEntry {
	if m != nil {
		return m.BuffercacheEntries
	}
	return nil
}

type BuffercacheEntry struct {
	DatabaseIdx int32  `protobuf:"varint,1,opt,name=database_idx,json=databaseIdx" json:"database_idx,omitempty"`
	SchemaName  string `protobuf:"bytes,2,opt,name=schema_name,json=schemaName" json:"schema_name,omitempty"`
	ObjectName  string `protobuf:"bytes,3,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
	ObjectKind  string `protobuf:"bytes,4,opt,name=object_kind,json=objectKind" json:"object_kind,omitempty"`
	Bytes       int64  `protobuf:"varint,5,opt,name=bytes" json:"bytes,omitempty"`
}

func (m *BuffercacheEntry) Reset()                    { *m = BuffercacheEntry{} }
func (m *BuffercacheEntry) String() string            { return proto.CompactTextString(m) }
func (*BuffercacheEntry) ProtoMessage()               {}
func (*BuffercacheEntry) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func init() {
	proto.RegisterType((*BuffercacheReport)(nil), "pganalyze.collector.BuffercacheReport")
	proto.RegisterType((*BuffercacheEntry)(nil), "pganalyze.collector.BuffercacheEntry")
}

var fileDescriptor3 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0x87, 0xd9, 0xe6, 0x84, 0x9d, 0x4e, 0xd4, 0x6c, 0x42, 0x15, 0xc4, 0x39, 0x70, 0xec, 0xaa,
	0x82, 0xbe, 0xc1, 0xd0, 0x0b, 0x11, 0xbc, 0x08, 0xa8, 0x97, 0x25, 0x69, 0xce, 0x5c, 0xb5, 0x4b,
	0x46, 0x92, 0xc2, 0xe6, 0x33, 0x89, 0xcf, 0x68, 0x9a, 0x6c, 0x3a, 0xcb, 0x2e, 0xfb, 0x9d, 0xaf,
	0xbf, 0xf3, 0x27, 0x70, 0xaa, 0x71, 0xa1, 0xb4, 0x35, 0xd7, 0xbc, 0x9c, 0x4e, 0x51, 0x67, 0x2c,
	0x9b, 0x61, 0xb2, 0xd0, 0xca, 0x2a, 0xd2, 0x5b, 0xbc, 0x31, 0xc9, 0x8a, 0xd5, 0x27, 0x26, 0x99,
	0x2a, 0x0a, 0xcc, 0xac, 0xd2, 0x67, 0x5d, 0x33, 0x63, 0x1a, 0x45, 0x50, 0x86, 0x5f, 0x4d, 0x38,
	0x9e, 0xfc, 0xfd, 0x48, 0x7d, 0x16, 0x19, 0xc1, 0x61, 0x48, 0x4d, 0x75, 0x29, 0xd3, 0xb2, 0xcc,
	0x45, 0xdc, 0x18, 0x34, 0xc6, 0x1d, 0x7a, 0x10, 0x30, 0x2d, 0xe5, 0xb3, 0x83, 0xe4, 0x15, 0x7a,
	0x82, 0x59, 0xc6, 0x99, 0xc1, 0x54, 0xa3, 0x0b, 0x41, 0x99, 0xa1, 0x89, 0x61, 0xd0, 0x1a, 0x47,
	0x37, 0xa3, 0x64, 0x47, 0xfb, 0xe4, 0x6e, 0xed, 0xd3, 0x8d, 0x4e, 0x89, 0xa8, 0x23, 0x43, 0x5e,
	0xa0, 0xb7, 0xb5, 0x4e, 0x8a, 0xd2, 0xea, 0xdc, 0x05, 0x47, 0x3e, 0xf8, 0x6a, 0x67, 0xf0, 0xd6,
	0x16, 0xf7, 0x4e, 0x5f, 0x51, 0xc2, 0xff, 0x13, 0x17, 0x40, 0x2e, 0x20, 0xb2, 0xca, 0xb2, 0x22,
	0xe5, 0x2b, 0xeb, 0xf2, 0xfa, 0x6e, 0xa9, 0x16, 0x05, 0x8f, 0x26, 0x15, 0x21, 0xe7, 0x00, 0x53,
	0x8d, 0xb8, 0xae, 0x9f, 0xf8, 0x7a, 0xa7, 0x22, 0xbe, 0x3c, 0xfc, 0x6e, 0xc0, 0x51, 0xbd, 0x11,
	0xb9, 0x84, 0xee, 0xef, 0x15, 0x72, 0xb1, 0xf4, 0xa7, 0x6a, 0xd3, 0x68, 0xc3, 0x1e, 0xc4, 0xb2,
	0xea, 0x6b, 0x9c, 0x3f, 0x67, 0xa9, 0x64, 0x73, 0x8c, 0x9b, 0xfe, 0x98, 0x10, 0xd0, 0x93, 0x23,
	0x95, 0xa0, 0xf8, 0xbb, 0xdb, 0x24, 0x08, 0xad, 0x20, 0x04, 0x54, 0x13, 0x3e, 0x72, 0x29, 0xe2,
	0xbd, 0x6d, 0xe1, 0xd1, 0x11, 0xd2, 0x87, 0x76, 0x18, 0xba, 0xed, 0x87, 0x0e, 0x1f, 0x7c, 0xdf,
	0x3f, 0xf3, 0xed, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0x31, 0x3f, 0xaf, 0x26, 0x02, 0x00,
	0x00,
}
